import { r as registerInstance, h } from './index-65ac344c.js';

const userLoginCss = "form{display:flex;flex-direction:column;justify-content:space-around;align-items:space-around}form span{font-size:16px;line-height:25px}label,input{display:inline-block}label{font-size:16px;margin:0 1em}input{display:inline;min-width:80px;border:1px solid #502669;font-size:18px;border-top:none;border-right:none;border-left:none}.flex{display:flex;justify-content:center;margin:1em 0}.title{color:#502669;font-weight:bold;text-align:center;margin:1em}button{padding:1em;cursor:pointer;-webkit-box-shadow:0.5px 3px 5px 0px rgba(0,0,0,0.15);-moz-box-shadow:.5px 3px 5px 0px rgba(0,0,0,0.15);box-shadow:0.5px 3px 5px 0px rgba(0,0,0,0.15);font-size:16px;width:100px;margin:1em auto}.error{color:red;font-weight:bold}";

const UserLogin = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.modalOpen = true;
    }
    componentDidLoad() {
        this.checkAuthentication();
    }
    checkAuthentication() {
        const token = localStorage.getItem('kclsu_token');
        if (token) {
            const expirationDate = new Date(localStorage.getItem('tokenExpireDate'));
            if (new Date() < expirationDate) {
                this.token = token;
                this.modalOpen = false;
            }
            else {
                localStorage.removeItem('kclsu_token');
                localStorage.removeItem('tokenExpireDate');
            }
        }
    }
    logIn(e) {
        e.preventDefault();
        let element = e.target;
        let email = element[0].value;
        let password = element[1].value;
        let url = 'https://kclsu-heroku.herokuapp.com/authenticate';
        let data = {
            package: {
                email: email,
                password: password,
                returnSecureToken: true
            },
            area: this.database
        };
        let payload = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        };
        fetch(url, payload)
            .then(res => res.json())
            .then(data => {
            console.log(data);
            if (!data.idToken)
                this.error = data.error.message;
            else {
                const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);
                localStorage.setItem('kclsu_token', data.idToken);
                localStorage.setItem('tokenExpireDate', expirationDate);
                this.error = '';
                this.token = data.idToken;
                this.modalOpen = false;
            }
        })
            .catch(er => this.error = er);
    }
    render() {
        return (h("kclsu-modal", { show: this.modalOpen }, h("form", { onSubmit: (e) => this.logIn(e) }, h("span", { class: "title" }, "Log in using details provided"), h("div", { class: "flex" }, h("label", null, " Email"), h("input", { type: "email", value: '', id: "email" })), h("div", { class: "flex" }, h("label", null, " Password"), h("input", { type: "password", value: '', id: "password" })), h("button", null, "Login")), h("span", { class: "error" }, this.error ? `${this.error} !` : '')));
    }
};
UserLogin.style = userLoginCss;

export { UserLogin as user_login };
