import { r as registerInstance, c as createEvent, h } from './index-65ac344c.js';

const galleryThumbnailStackedCss = ".card{display:flex;background:#fff;position:relative;-webkit-box-shadow:0.5px 3px 5px 0px rgba(0,0,0,0.15);-moz-box-shadow:.5px 3px 5px 0px rgba(0,0,0,0.15);box-shadow:0.5px 3px 5px 0px rgba(0,0,0,0.15);border:1px solid #eaeaea;min-height:60px;flex-direction:column;height:100%;width:180px;overflow:hidden}.card:hover{cursor:pointer}.card:hover>.content>.title{color:#15847F;cursor:pointer}.active{background-color:#15847F;color:white}.image{justify-self:flex-start;width:180px;height:100px}.title{margin:15px 0 0 0;line-height:22px;font-weight:500;line-height:1.1;color:#502669;padding:0 20px;display:inline-block;font-weight:bold;font-family:bree-serif, bree_serifbold, serif;font-weight:600;margin-bottom:15px;font-size:14px;text-align:center}.content{display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100px}@media only screen and (max-width: 650px){.card{height:100%;width:160px}.image{width:160px;height:80px}.content{height:80px}.title{font-size:12px}}@media only screen and (max-width: 520px){.card{height:100%;width:160px}.image{width:160px;height:80px}.content{height:80px}.title{font-size:12px}}";

const GalleryThumbnailStacked = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.emitClick = createEvent(this, "emitClick", 7);
    }
    clickHandler(e) {
        e.preventDefault();
        this.emitClick.emit(this.emitid);
    }
    render() {
        let style = {
            'background-image': `url(${this.image})`,
            'background-position': 'center center',
            'background-size': 'cover',
            'background-repeat': 'no-repeat'
        };
        let activeStyle = !this.active ? {} : { "background-color": "teal", "color": "white" };
        return (h("div", { class: "card", onClick: e => this.clickHandler(e), style: activeStyle }, h("div", { class: "image", style: style }), h("div", { class: "content" }, h("span", { class: "title", style: activeStyle }, this.videotitle))));
    }
};
GalleryThumbnailStacked.style = galleryThumbnailStackedCss;

export { GalleryThumbnailStacked as gallery_thumbnail_stacked };
